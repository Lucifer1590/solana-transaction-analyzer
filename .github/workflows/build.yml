name: Build and Release Python Binaries

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Using Python 3.9

      - name: Install dependencies on Ubuntu
        if: runner.os == 'Linux'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install dependencies on Windows
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path requirements.txt) {pip install -r requirements.txt}

      - name: Build binary
        run: |
          pyinstaller --onefile transaction_analysis.py

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-binary
          path: dist/transaction_analysis*
  
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-binary
          path: binaries/linux

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-binary
          path: binaries/windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries/linux/transaction_analysis
          asset_name: transaction_analysis_linux
          asset_content_type: application/octet-stream

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: binaries/windows/transaction_analysis.exe
          asset_name: transaction_analysis_windows.exe
          asset_content_type: application/octet-stream

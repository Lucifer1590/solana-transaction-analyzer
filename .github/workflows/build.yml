name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name of the release'
        required: true
        default: 'Manual Release'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: transaction_analysis_linux
          - os: windows-latest
            output_name: transaction_analysis_windows.exe

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build binary
      run: pyinstaller --onefile transaction_analysis.py --name ${{ matrix.output_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.output_name }}
        path: dist/${{ matrix.output_name }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.event.inputs.release_name || format('Release {0}', github.ref_name) }}
        draft: false
        prerelease: false

    - name: Upload Release Assets (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./transaction_analysis_linux/transaction_analysis_linux
        asset_name: transaction_analysis_linux
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./transaction_analysis_windows.exe/transaction_analysis_windows.exe
        asset_name: transaction_analysis_windows.exe
        asset_content_type: application/octet-stream
